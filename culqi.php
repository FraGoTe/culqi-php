<?php
define('CULQI_SDK_VERSION', '1.0.0'); class UrlAESCipher { protected $key; protected $cipher = MCRYPT_RIJNDAEL_128; protected $mode = MCRYPT_MODE_CBC; function __construct($sp1d9e37 = null) { $this->setBase64Key($sp1d9e37); } public function setBase64Key($sp1d9e37) { $this->key = base64_decode($sp1d9e37); } private function sp37ad28() { if ($this->key != null) { return true; } else { return false; } } private function spc2dc6d() { return mcrypt_create_iv(16, MCRYPT_RAND); } public function urlBase64Encrypt($spb91976) { if ($this->sp37ad28()) { $sp99a0f5 = mcrypt_get_block_size($this->cipher, $this->mode); $spe43bd7 = UrlAESCipher::pkcs5_pad($spb91976, $sp99a0f5); $spa03e15 = $this->spc2dc6d(); return trim(UrlAESCipher::base64_encode_url($spa03e15 . mcrypt_encrypt($this->cipher, $this->key, $spe43bd7, $this->mode, $spa03e15))); } else { throw new Exception('Invlid params!'); } } public function urlBase64Decrypt($spb91976) { if ($this->sp37ad28()) { $spe7f752 = UrlAESCipher::base64_decode_url($spb91976); $spa03e15 = substr($spe7f752, 0, 16); $spbdea3e = substr($spe7f752, 16); return trim(UrlAESCipher::pkcs5_unpad(mcrypt_decrypt($this->cipher, $this->key, $spbdea3e, $this->mode, $spa03e15))); } else { throw new Exception('Invlid params!'); } } public static function pkcs5_pad($sp3ddb9b, $sp99a0f5) { $spd09dee = $sp99a0f5 - strlen($sp3ddb9b) % $sp99a0f5; return $sp3ddb9b . str_repeat(chr($spd09dee), $spd09dee); } public static function pkcs5_unpad($sp3ddb9b) { $spd09dee = ord($sp3ddb9b[strlen($sp3ddb9b) - 1]); if ($spd09dee > strlen($sp3ddb9b)) { return false; } if (strspn($sp3ddb9b, chr($spd09dee), strlen($sp3ddb9b) - $spd09dee) != $spd09dee) { return false; } return substr($sp3ddb9b, 0, -1 * $spd09dee); } protected function base64_encode_url($spb39bc7) { return strtr(base64_encode($spb39bc7), '+/', '-_'); } protected function base64_decode_url($spb39bc7) { return base64_decode(strtr($spb39bc7, '-_', '+/')); } } class Culqi { public static $llaveSecreta; public static $codigoComercio; public static $servidorBase = 'https://pago.culqi.com'; public static function cifrar($sp3c72fa) { $sp356ddc = new UrlAESCipher(); $sp356ddc->setBase64Key(Culqi::$llaveSecreta); return $sp356ddc->urlBase64Encrypt($sp3c72fa); } public static function decifrar($sp3c72fa) { $sp356ddc = new UrlAESCipher(); $sp356ddc->setBase64Key(Culqi::$llaveSecreta); return $sp356ddc->urlBase64Decrypt($sp3c72fa); } } class Pago { const URL_VALIDACION_AUTORIZACION = '/web/validar/'; const URL_ANULACION = '/anular/'; const URL_CONSULTA = '/consultar/'; const PARAM_COD_COMERCIO = 'codigo_comercio'; const PARAM_EXTRA = 'extra'; const PARAM_SDK_INFO = 'sdk'; const PARAM_NUM_PEDIDO = 'numero_pedido'; const PARAM_MONTO = 'monto'; const PARAM_MONEDA = 'moneda'; const PARAM_DESCRIPCION = 'descripcion'; const PARAM_COD_PAIS = 'cod_pais'; const PARAM_CIUDAD = 'ciudad'; const PARAM_DIRECCION = 'direccion'; const PARAM_NUM_TEL = 'num_tel'; const PARAM_INFO_VENTA = 'informacion_venta'; const PARAM_TOKEN = 'token'; const PARAM_VIGENCIA = 'vigencia'; private static function getSdkInfo() { return array('v' => CULQI_VERSION, 'lng_n' => 'php', 'lng_v' => phpversion(), 'os_n' => PHP_OS, 'os_v' => php_uname()); } public static function crearDatospago($sp152b1c, $spff8333 = null) { Pago::validateParams($sp152b1c); $sp0e7e94 = Pago::getCipherData($sp152b1c, $spff8333); $spc45b76 = array(Pago::PARAM_COD_COMERCIO => Culqi::$codigoComercio, Pago::PARAM_INFO_VENTA => $sp0e7e94); $spa55c40 = Pago::validateAuth($spc45b76); if (!empty($spa55c40) && array_key_exists(Pago::PARAM_TOKEN, $spa55c40)) { $spc87aa8 = array(Pago::PARAM_COD_COMERCIO => $spa55c40[Pago::PARAM_COD_COMERCIO], Pago::PARAM_TOKEN => $spa55c40[Pago::PARAM_TOKEN]); $spa55c40[Pago::PARAM_INFO_VENTA] = Culqi::cifrar(json_encode($spc87aa8)); } return $spa55c40; } public static function consultar($sp15d631) { $sp0e7e94 = Pago::getCipherData(array(Pago::PARAM_TOKEN => $sp15d631)); $sp152b1c = array(Pago::PARAM_COD_COMERCIO => Culqi::$codigoComercio, Pago::PARAM_INFO_VENTA => $sp0e7e94); return Pago::postJson(Culqi::$servidorBase . Pago::URL_CONSULTA, $sp152b1c); } public static function anular($sp15d631) { $sp0e7e94 = Pago::getCipherData(array(Pago::PARAM_TOKEN => $sp15d631)); $sp152b1c = array(Pago::PARAM_COD_COMERCIO => Culqi::$codigoComercio, Pago::PARAM_INFO_VENTA => $sp0e7e94); return Pago::postJson(Culqi::$servidorBase . Pago::URL_ANULACION, $sp152b1c); } private static function getCipherData($sp152b1c, $spff8333 = null) { $sp326196 = array_merge(array(Pago::PARAM_COD_COMERCIO => Culqi::$codigoComercio), $sp152b1c); if (!empty($spff8333)) { $sp326196[Pago::PARAM_EXTRA] = $spff8333; } $sp326196[Pago::PARAM_SDK_INFO] = Pago::getSdkInfo(); $sp7bd462 = json_encode($sp326196); return Culqi::cifrar($sp7bd462); } private static function validateAuth($sp152b1c) { return Pago::postJson(Culqi::$servidorBase . Pago::URL_VALIDACION_AUTORIZACION, $sp152b1c); } private static function validateParams($sp152b1c) { if (!isset($sp152b1c[Pago::PARAM_MONEDA]) or empty($sp152b1c[Pago::PARAM_MONEDA])) { throw new InvalidParamsException('[Error] Debe existir una moneda'); } else { if (strlen(trim($sp152b1c[Pago::PARAM_MONEDA])) != 3) { throw new InvalidParamsException('[Error] La moneda debe contener exactamente 3 caracteres.'); } } if (!isset($sp152b1c[Pago::PARAM_MONTO]) or empty($sp152b1c[Pago::PARAM_MONTO])) { throw new InvalidParamsException('[Error] Debe existir un monto'); } else { if (is_numeric($sp152b1c[Pago::PARAM_MONTO])) { if (!ctype_digit($sp152b1c[Pago::PARAM_MONTO])) { throw new InvalidParamsException('[Error] El monto debe ser un número entero, no flotante.'); } } else { throw new InvalidParamsException('[Error] El monto debe ser un número entero.'); } } } private static function postJson($sp22e5db, $sp152b1c) { $sp73d4a9 = array('http' => array('header' => 'Content-Type: application/json
' . 'User-Agent: php-context
', 'method' => 'POST', 'content' => json_encode($sp152b1c), 'ignore_errors' => true), 'ssl' => array('CN_match' => 'www.culqi.com')); $sp6d6fdd = stream_context_create($sp73d4a9); $spa55c40 = file_get_contents($sp22e5db, false, $sp6d6fdd); $sp9231a6 = Culqi::decifrar($spa55c40); return json_decode($sp9231a6, true); } } class InvalidParamsException extends Exception { }